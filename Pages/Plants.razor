@page "/Plants/Crop/{CropId:int}"
@page "/Plants/{PlantId:int}"
@page "/Plants"

@using GNUCannabis.Pages.Components
@using GNUCannabis.Models;
@using GNUCannabis.Services;
@inject PlantService service;

<PageTitle>Plantas</PageTitle>

<GNUBackButton RedirectUrl="/Crops" />

<div class="d-flex flex-column content">
    <h1 class="title fw-semibold">Plantas</h1>
    <div class="table-wrapper">
        <div class="table-responsive h-fit-content">
            <table class="table table-bordered table-striped table-hover text-center mb-0">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Nombre</th>
                        <th>Cultivo</th>
                        <th>Tipo Planta</th>
                        <th>Estado Planta</th>
                    </tr>
                </thead>
                <tbody>
                    @if (plants.Count == 0)
                    {
                        <tr>
                            <td colspan="5" class="text-center">No hay Plantas registradas</td>
                        </tr>
                    }
                    else
                    {
                        foreach (var plant in plants)
                        {
                            <tr>
                                <td>@plant.IdPlanta</td>
                                <td>@plant.Nombre</td>
                                <td>@plant.Cultivo</td>
                                <td>@plant.TipoPlanta</td>
                                <td>@plant.EstadoPlanta</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .content {
        height: 100vh;
        align-items: center;

        h1 {
            display: flex;
            height: 30%;
            align-items: end;
            justify-content: center;
        }

        .table-wrapper {
            display: flex;
            height: 80%;
            width: 80%;
            max-width: 80%;
            padding-top: 5%;
            padding-bottom: 5%;

            table {
                height: fit-content;
                width: 100%;
                font-size: calc(100vw/55);
            }

        }
    }

    .h-fit-content {
        height: fit-content;
        width: 100%;
    }
</style>

@code {
    private List<Plant> plants = new List<Plant>();

    [Parameter]
    public int? CropId { get; set; }

    [Parameter]
    public int? PlantId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (CropId.HasValue)
        {
            await GetPlantsByCropId(CropId.Value);
        }
        else if (PlantId.HasValue)
        {
            await GetPlantById(PlantId.Value);
        }
        else
        {
            await GetPlants();
        }
    }

    private async Task GetPlants()
    {
        try
        {
            var resultado = await service.GetPlantsAsync();
            if (resultado != null)
            {
                plants = resultado;
            }
            else
            {
                plants = new List<Plant>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task GetPlantById(int id)
    {
        try
        {
            var resultado = await service.GetPlantByIdAsync(id);
            if (resultado != null)
            {
                plants[0] = resultado;
            }
            else
            {
                plants = new List<Plant>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }


    private async Task GetPlantsByCropId(int id)
    {
        try
        {
            var resultado = await service.GetGPlantsByCropId(id);
            if (resultado != null)
            {
                plants = resultado;
            }
            else
            {
                plants = new List<Plant>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

}